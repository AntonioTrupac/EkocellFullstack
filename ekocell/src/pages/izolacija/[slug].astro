---
import TextWithMedia from "@components/TextWithMedia.astro";
import { getCategories } from "src/api/getCategories";
import type { GenericSubCategory } from "src/api/getCategories";
import Layout from "src/layouts/Layout.astro";
import type {
  FormattedElement,
  FormattedText,
} from "../../../../payload/src/rich-text-export";

export async function getStaticPaths() {
  const data = await getCategories();

  return data.category.map((c) => {
    return {
      params: { slug: c.slug },
      props: {
        description: c.opis,
        name: c.ime,
        characteristics: c.characteristics,
        specifications: c.specifications,
        usages: c.usages,
      },
    };
  });
}

interface Props {
  description: string;
  name: string;
  characteristics: GenericSubCategory;
  specifications: GenericSubCategory;
  usages: GenericSubCategory;
}

const { name, description, characteristics, specifications, usages } =
  Astro.props;

const characteristicsMarkdown = characteristics.description as (
  | FormattedElement
  | FormattedText
)[];
const characteristicsMedia = characteristics.images;

const specificationsMarkdown = specifications.description as (
  | FormattedElement
  | FormattedText
)[];
const specificationsMedia = specifications.images;

const usagesMarkdown = usages.description as (
  | FormattedElement
  | FormattedText
)[];
const usagesMedia = usages.images;
---

<Layout title="Ekocell | Egger Izolacija">
  <section class="xl:max-w-7xl m-auto mt-10 px-5 md:px-10 pb-10">
    <h1
      class="lg:text-6xl text-5xl leading-snug lg:leading-normal mb-2 text-slate-800"
    >
      {name}
    </h1>

    <p class="text-slate-600">{description}</p>

    <TextWithMedia
      markdown={characteristicsMarkdown}
      media={characteristicsMedia}
    />

    <TextWithMedia
      markdown={specificationsMarkdown}
      media={specificationsMedia}
    />

    <TextWithMedia markdown={usagesMarkdown} media={usagesMedia} />
  </section>
</Layout>
